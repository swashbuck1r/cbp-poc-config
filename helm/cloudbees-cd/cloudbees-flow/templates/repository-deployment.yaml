{{- if .Values.repository.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flow-repository
  namespace: {{ .Release.Namespace }}
  labels:
    app: flow-repository
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.repository.replicas }}
  selector:
    matchLabels:
      app: flow-repository
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: flow-repository
        release: {{ .Release.Name }}
    spec:
{{- with .Values.repository.affinity }}
      affinity:
            {{ toYaml . | nindent 8 }}
{{- end }}
{{- with  .Values.repository.tolerations }}
      tolerations:
            {{ toYaml . | nindent 8 }}
{{- end }}
{{- if .Values.repository.nodeSelector }}
      nodeSelector:
            {{ toYaml .Values.repository.nodeSelector | nindent 8 }}
{{ else }}
      nodeSelector:
        {{ include "os.label" . }}: linux
{{- end }}
      serviceAccountName: {{ template "cloudbees-flow.serviceAccountName" . }}
      {{- if eq .Values.securityContext.enabled true }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end}}
{{- if and .Values.volumePermissions.enabled .Values.repository.volumesPermissionsInitContainer.enabled }}
      initContainers:
        - name: volumes-permissions
          image: "{{- if .Values.images.registry }}{{ .Values.images.registry }}/{{- end }}{{ .Values.repository.imageRepository }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: repository-data-volume
            mountPath: /repository-data
          command:
          - sh
          - -c
          - |
            set -e
            set -x
            chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /repository-data
          resources:
            limits:
              cpu: "25m"
              memory: "128Mi"
            requests:
              cpu: "25m"
              memory: "128Mi"
{{- end }}
      containers:
        - name: flow-repository
          image: "{{- if .Values.images.registry }}{{ .Values.images.registry }}/{{- end }}{{ .Values.repository.imageRepository }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
          - name: CBF_REPOSITORY_NAME
            value: "default"
          - name: PUBLIC_HOSTNAME
{{- if .Values.server.enabled }}
{{- if eq .Values.serverName "flow-server" }}
            value: {{ .Values.repository.serviceEndpoint | default "flow-repository" | quote }}
{{- else }}
            value: {{ .Values.serverName | quote }}
{{- end }}
{{- else }}
            value: {{ required ".repository.serviceEndpoint is required for Flow repository server deployment without a Flow server" (tpl .Values.repository.serviceEndpoint .) | quote }}
{{- end }}
{{- if .Values.serverName }}
          - name: CBF_SERVER_HOST
            value: {{ .Values.serverName | quote }}
          - name: CBF_SERVER_PASSWORD
            valueFrom:
              secretKeyRef:
{{- if .Values.flowCredentials.existingSecret }}
                name: {{ .Values.flowCredentials.existingSecret }}
{{- else }}
                name: {{ template "cloudbees-flow.fullname" . }}-credentials
{{- end }}
                key: CBF_SERVER_ADMIN_PASSWORD
          - name: CBF_SERVER_USER
            value: admin
{{- end }}
          - name: CBF_LOCAL_RESOURCE_HOST
            value: flow-bound-agent
{{- if .Values.repository.zoneName }}
          - name: CBF_ZONE_NAME
            value: {{ .Values.repository.zoneName | quote }}
{{- end }}
          - name: CBF_CONFIGURE
            value: {{ .Values.repository.ecconfigure }}
{{- if .Values.repository.extraEnvs }}
{{ toYaml .Values.repository.extraEnvs | indent 10 }}
{{- end }}
          ports:
          - containerPort: 8200
            name: p3-repository
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8200
            initialDelaySeconds: 120
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command: ["/opt/cbflow/health-check"]
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.repository.resources | indent 12 }}
          volumeMounts:
          - name: repository-data-volume
            mountPath: /repository-data
          - name: logback-config
            mountPath: /custom-config/repository/logback-local.groovy
            subPath: repository-logback-config
      volumes:
      - name: repository-data-volume
        persistentVolumeClaim:
           claimName: {{ .Values.storage.volumes.repositoryStorage.name }}
      - name: logback-config
        configMap:
          name: flow-logging-config
{{- end }}
