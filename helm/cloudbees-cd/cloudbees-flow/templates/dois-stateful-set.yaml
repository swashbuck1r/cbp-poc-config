{{- if .Values.dois.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flow-devopsinsight
  namespace: {{ .Release.Namespace }}
  labels:
    app: flow-devopsinsight
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.dois.replicas }}
  podManagementPolicy: "Parallel"
  serviceName: flow-devopsinsight
  selector:
    matchLabels:
      app: flow-devopsinsight
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: flow-devopsinsight
        release: {{ .Release.Name }}
{{- if .Values.dois.openshiftNodeTuning }}
        tuned.openshift.io/elasticsearch: ""
{{- end }}
    spec:
{{- with .Values.dois.affinity }}
      affinity:
            {{ toYaml . | nindent 8 }}
{{- end }}
{{- with  .Values.dois.tolerations }}
      tolerations:
            {{ toYaml . | nindent 8 }}
{{- end }}
{{- if .Values.dois.nodeSelector }}
      nodeSelector:
            {{ toYaml .Values.dois.nodeSelector | nindent 8 }}
{{ else }}
      nodeSelector:
        {{ include "os.label" . }}: linux
{{- end }}
      serviceAccountName: {{ template "cloudbees-flow.serviceAccountName" . }}
      {{- if eq .Values.securityContext.enabled true }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end}}
      initContainers:
{{- if .Values.dois.sysctlInitContainer.enabled }}
        - name: sysctl
          image: busybox:stable
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          resources:
            limits:
              cpu: "25m"
              memory: "128Mi"
            requests:
              cpu: "25m"
              memory: "128Mi"
          command: ["/bin/sh"]
          args: ["-c", "sysctl -w vm.max_map_count=262144"]
          securityContext:
            privileged: true
            runAsUser: 0
{{- end }}
{{- if and .Values.volumePermissions.enabled .Values.dois.volumesPermissionsInitContainer.enabled }}
        - name: volumes-permissions
          image: "{{- if .Values.images.registry }}{{ .Values.images.registry }}/{{- end }}{{ .Values.dois.imageRepository }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: {{ .Values.storage.volumes.doisStorage.name }}
            mountPath: /elasticsearch-data
          command:
          - sh
          - -c
          - |
            set -e
            set -x
            chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /elasticsearch-data
          resources:
            limits:
              cpu: "25m"
              memory: "128Mi"
            requests:
              cpu: "25m"
              memory: "128Mi"
{{- end }}
      containers:
      - name: flow-devopsinsight
        image: "{{- if .Values.images.registry }}{{ .Values.images.registry }}/{{- end }}{{ .Values.dois.imageRepository }}:{{ .Values.images.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        env:
        - name: CBF_SERVER_HOST
          value: {{ required ".serverName is required for Flow DevOps Insight server deployment" .Values.serverName | quote }}
        - name: CBF_DOIS_HOST
          value: {{ tpl .Values.dois.serviceEndpoint . | quote }}
        - name: CBF_SERVER_USER
          value: admin
        - name: CBF_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
{{- if .Values.flowCredentials.existingSecret }}
              name: {{ .Values.flowCredentials.existingSecret }}
{{- else }}
              name: {{ template "cloudbees-flow.fullname" . }}-credentials
{{- end }}
              key: CBF_SERVER_ADMIN_PASSWORD
{{- if .Values.dois.credentials.existingSecret }}
        - name: CBF_DOIS_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dois.credentials.existingSecret }}
              key: CBF_DOIS_ADMIN_PASSWORD
        - name: CBF_DOIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dois.credentials.existingSecret }}
              key: CBF_DOIS_PASSWORD

{{- else }}
        - name: CBF_DOIS_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cloudbees-flow.fullname" . }}-dois
              key: CBF_DOIS_ADMIN_PASSWORD
        - name: CBF_DOIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cloudbees-flow.fullname" . }}-dois
              key: CBF_DOIS_PASSWORD
{{- end }}
{{- if .Values.dois.esClusterName }}
        - name: CBF_DOIS_ES_CLUSTER_NAME
          value: {{ .Values.dois.esClusterName | quote }}
{{- end }}
{{- if gt (.Values.dois.replicas | int) 1 }}
        - name: CBF_DOIS_ES_MIN_MASTER_NODES
          value: {{ .Values.dois.esMinMasterNodes | quote }}
        - name: CBF_DOIS_ES_DISCOVERY_HOSTS
          value: {{ include "dois.nodes" . | trimSuffix "," | quote }}
{{- end }}
{{- if .Values.dois.esNumberOfShards }}
        - name: CBF_DOIS_ES_NUMBER_OF_SHARDS
          value: {{ .Values.dois.esNumberOfShards | quote }}
{{- end }}
{{- if .Values.dois.esRam }}
        - name: CBF_DOIS_ES_RAM
          value: {{ .Values.dois.esRam | quote }}
{{- end }}
{{- if .Values.dois.lsInitRam }}
        - name: CBF_DOIS_LS_INIT_RAM
          value: {{ .Values.dois.lsInitRam | quote }}
{{- end }}
{{- if .Values.dois.lsMaxRam }}
        - name: CBF_DOIS_LS_MAX_RAM
          value: {{ .Values.dois.lsMaxRam | quote }}
{{- end }}
{{- if .Values.dois.extraEnvs }}
{{ toYaml .Values.dois.extraEnvs | indent 8 }}
{{- end }}
        readinessProbe:
          tcpSocket:
# Actually, the logstash port (9500) should be specified here, as the service is fully operational
# when both elasticsearch and logstash are available, and the logstash process is started only
# after the elasticsearch is successfully initialized. But for elasticsearch initialization, it
# needs to connect to other nodes by their domain name. On the other hand, the other nodes
# don't get the domain name until they are in "ready" state.
# In this regard, we specify elasticsearch port to signal that the service is ready to receive
# the domain name.
            port: 9200
          initialDelaySeconds: 60
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["/opt/cbflow/health-check"]
          initialDelaySeconds: 60
          periodSeconds: 20
        ports:
        - name: p1-dois
          containerPort: 9200
          protocol: TCP
        - name: p2-dois
          containerPort: 9500
          protocol: TCP
        resources:
            {{- toYaml .Values.dois.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /elasticsearch-data
          name: {{ .Values.storage.volumes.doisStorage.name }}

  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.storage.volumes.doisStorage.name }}
      spec:
        accessModes:
          - {{ .Values.storage.volumes.doisStorage.accessMode | default "ReadWriteOnce" | quote }}
        resources:
          requests:
            storage: "{{ .Values.storage.volumes.doisStorage.storage }}"
              {{- if .Values.storage.volumes.doisStorage.storageClass }}
              {{- if (eq "-"  .Values.storage.volumes.doisStorage.storageClass) }}
        storageClassName: ""
              {{- else }}
        storageClassName: {{ .Values.storage.volumes.doisStorage.storageClass | quote }}
              {{- end }}
              {{- end }}
{{- end }}
